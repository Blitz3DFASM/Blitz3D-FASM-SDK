;***********************************************
;*       Blitz3D SDK V1.05 FASM include        *
;***********************************************

import b3d,\
bbVersion, 'bbVersion',\                                  ;int bbVersion();
bbSetBlitz3DDebugMode, 'bbSetBlitz3DDebugMode',\          ;void bbSetBlitz3DDebugMode( int debugmode );
bbSetBlitz3DDebugCallback, 'bbSetBlitz3DDebugCallback',\  ;void bbSetBlitz3DDebugCallback( void (*callback)(const char *) );
bbSetBlitz3DEventCallback, 'bbSetBlitz3DEventCallback',\  ;void bbSetBlitz3DEventCallback( int (*callback)(int hwnd,int msg,int wparam,int lparam) );
bbSetBlitz3DHWND, 'bbSetBlitz3DHWND',\                    ;void bbSetBlitz3DHWND( int hwndparent );
bbSetBlitz3DTitle, 'bbSetBlitz3DTitle',\                  ;void bbSetBlitz3DTitle( const char *title,const char *close );
bbBeginBlitz3D, 'bbBeginBlitz3D',\                        ;int bbBeginBlitz3D();
bbBeginBlitz3DEx, 'bbBeginBlitz3DEx',\                    ;int bbBeginBlitz3DEx( int hwnd,int flags );
bbEndBlitz3D, 'bbEndBlitz3D',\                            ;void bbEndBlitz3D();
bbValidateGraphics, 'bbValidateGraphics',\                ;int bbValidateGraphics();
bbRuntimeError, 'bbRuntimeError',\                        ;void bbRuntimeError( const char * );
bbSystemProperty, 'bbSystemProperty',\                    ;const char *bbSystemProperty(const char *name);
bbMilliSecs, 'bbMilliSecs',\                              ;int bbMilliSecs();
bbDelay, 'bbDelay',\                                      ;void bbDelay( int ms );
bbShowPointer, 'bbShowPointer',\                          ;void bbShowPointer();
bbHidePointer, 'bbHidePointer',\                          ;void bbHidePointer();
bbCreateTimer, 'bbCreateTimer',\                          ;BBTimer bbCreateTimer( int hz );
bbFreeTimer, 'bbFreeTimer',\                              ;void bbFreeTimer(BBTimer timer);
bbWaitTimer, 'bbWaitTimer',\                              ;void bbWaitTimer(BBTimer timer);
\  ; bbinput
bbKeyDown, 'bbKeyDown',\                                  ;int bbKeyDown( int n );
bbKeyHit, 'bbKeyHit',\                                    ;int bbKeyHit( int n );
bbGetKey, 'bbGetKey',\                                    ;int bbGetKey();
bbWaitKey, 'bbWaitKey',\                                  ;int bbWaitKey();
bbFlushKeys, 'bbFlushKeys',\                              ;void bbFlushKeys();
bbMouseDown, 'bbMouseDown',\                              ;int bbMouseDown( int n );
bbMouseHit, 'bbMouseHit',\                                ;int bbMouseHit( int n );
bbGetMouse, 'bbGetMouse',\                                ;int bbGetMouse();
bbWaitMouse, 'bbWaitMouse',\                              ;int bbWaitMouse();
bbMouseX, 'bbMouseX',\                                    ;int bbMouseX();
bbMouseY, 'bbMouseY',\                                    ;int bbMouseY();
bbMouseZ, 'bbMouseZ',\                                    ;int bbMouseZ();
bbMouseXSpeed, 'bbMouseXSpeed',\                          ;int bbMouseXSpeed();
bbMouseYSpeed, 'bbMouseYSpeed',\                          ;int bbMouseYSpeed();
bbMouseZSpeed, 'bbMouseZSpeed',\                          ;int bbMouseZSpeed();
bbMoveMouse, 'bbMoveMouse',\                              ;void bbMoveMouse( int x,int y );
bbFlushMouse, 'bbFlushMouse',\                            ;void bbFlushMouse();
bbJoyType, 'bbJoyType',\                                  ;int bbJoyType( int port=0 );
bbJoyDown, 'bbJoyDown',\                                  ;int bbJoyDown( int n,int port=0 );
bbJoyHit, 'bbJoyHit',\                                    ;int bbJoyHit( int n,int port=0 );
bbGetJoy, 'bbGetJoy',\                                    ;int bbGetJoy( int port=0 );
bbWaitJoy, 'bbWaitJoy',\                                  ;int bbWaitJoy( int port=0 );
bbJoyX, 'bbJoyX',\                                        ;float bbJoyX( int port=0 );
bbJoyY, 'bbJoyY',\                                        ;float bbJoyY( int port=0 );
bbJoyZ, 'bbJoyZ',\                                        ;float bbJoyZ( int port=0 );
bbJoyU, 'bbJoyU',\                                        ;float bbJoyU( int port=0 );
bbJoyV, 'bbJoyV',\                                        ;float bbJoyV( int port=0 );
bbJoyPitch, 'bbJoyPitch',\                                ;float bbJoyPitch( int port=0 );
bbJoyYaw, 'bbJoyYaw',\                                    ;float bbJoyYaw( int port=0 );
bbJoyRoll, 'bbJoyRoll',\                                  ;float bbJoyRoll( int port=0 );
bbJoyHat, 'bbJoyHat',\                                    ;int bbJoyHat( int port=0 );
bbJoyXDir, 'bbJoyXDir',\                                  ;int bbJoyXDir( int port=0 );
bbJoyYDir, 'bbJoyYDir',\                                  ;int bbJoyYDir( int port=0 );
bbJoyZDir, 'bbJoyZDir',\                                  ;int bbJoyZDir( int port=0 );
bbJoyUDir, 'bbJoyUDir',\                                  ;int bbJoyUDir( int port=0 );
bbJoyVDir, 'bbJoyVDir',\                                  ;int bbJoyVDir( int port=0 );
bbFlushJoy, 'bbFlushJoy',\                                ;void bbFlushJoy();
bbLoadSound, 'bbLoadSound',\                              ;BBSound bbLoadSound( const char *src,int flags=0 );
bbFreeSound, 'bbFreeSound',\                              ;void bbFreeSound( BBSound sound );
bbPlaySound, 'bbPlaySound',\                              ;BBChannel bbPlaySound( BBSound sound );
\ ; bbaudio
bbLoopSound, 'bbLoopSound',\                              ;void bbLoopSound( BBSound sound );
bbSoundPitch, 'bbSoundPitch',\                            ;void bbSoundPitch( BBSound sound,int pitch );
bbSoundVolume, 'bbSoundVolume',\                          ;void bbSoundVolume( BBSound sound,float volume );
bbSoundPan, 'bbSoundPan',\                                ;void bbSoundPan( BBSound sound,float pan );
bbPlayMusic, 'bbPlayMusic',\                              ;BBChannel bbPlayMusic( const char *src,int mode=1 );
bbPlayCDTrack, 'bbPlayCDTrack',\                          ;BBChannel bbPlayCDTrack( int track,int mode=1 );
bbStopChannel, 'bbStopChannel',\                          ;void bbStopChannel( BBChannel channel );
bbPauseChannel, 'bbPauseChannel',\                        ;void bbPauseChannel( BBChannel channel );
bbResumeChannel, 'bbResumeChannel',\                      ;void bbResumeChannel( BBChannel channel );
bbChannelPitch, 'bbChannelPitch',\                        ;void bbChannelPitch( BBChannel channel,int pitch );
bbChannelVolume, 'bbChannelVolume',\                      ;void bbChannelVolume( BBChannel channel,float volume );
bbChannelPan, 'bbChannelPan',\                            ;void bbChannelPan( BBChannel channel,float pan );
bbChannelPlaying, 'bbChannelPlaying',\                    ;int bbChannelPlaying( BBChannel channel );
\  ; bbgraphics
bbGraphics3D, 'bbGraphics3D',\                            ;void bbGraphics3D( int width,int height,int depth=0,int mode=0 );
bbCountGfxDrivers, 'bbCountGfxDrivers',\                  ;int bbCountGfxDrivers();
bbGfxDriverName, 'bbGfxDriverName',\                      ;const char *bbGfxDriverName( int n );
bbGfxDriver3D, 'bbGfxDriver3D',\                          ;int bbGfxDriver3D( int n );
bbGfxDriverCaps3D, 'bbGfxDriverCaps3D',\                  ;int bbGfxDriverCaps3D();
bbCountGfxModes3D, 'bbCountGfxModes3D',\                  ;int bbCountGfxModes3D();
bbGfxMode3DExists, 'bbGfxMode3DExists',\                  ;int bbGfxMode3DExists( int w,int h,int d );
bbGfxMode3D, 'bbGfxMode3D',\                              ;int bbGfxMode3D( int n );
bbWindowed3D, 'bbWindowed3D',\                            ;int bbWindowed3D();
bbGfxDriverX, 'bbGfxDriverX',\                            ;int bbGfxDriverX( int n );
bbGfxDriverY, 'bbGfxDriverY',\                            ;int bbGfxDriverY( int n );
bbGfxDriverHz, 'bbGfxDriverHz',\                          ;int bbGfxDriverHz( int n );
bbSetGfxDriver, 'bbSetGfxDriver',\                        ;void bbSetGfxDriver( int n );
bbGfxModeExists, 'bbGfxModeExists',\                      ;int bbGfxModeExists( int w,int h,int d );
bbCountGfxModes, 'bbCountGfxModes',\                      ;int bbCountGfxModes();
bbGfxModeWidth, 'bbGfxModeWidth',\                        ;int bbGfxModeWidth( int n );
bbGfxModeHeight, 'bbGfxModeHeight',\                      ;int bbGfxModeHeight( int n );
bbGfxModeDepth, 'bbGfxModeDepth',\                        ;int bbGfxModeDepth( int n );
bbGraphicsWidth, 'bbGraphicsWidth',\                      ;int bbGraphicsWidth();
bbGraphicsHeight, 'bbGraphicsHeight',\                    ;int bbGraphicsHeight();
bbGraphicsDepth, 'bbGraphicsDepth',\                      ;int bbGraphicsDepth();
bbAvailVidMem, 'bbAvailVidMem',\                          ;int bbAvailVidMem();
bbTotalVidMem, 'bbTotalVidMem',\                          ;int bbTotalVidMem();
bbGraphics, 'bbGraphics',\                                ;void bbGraphics( int w,int h,int d,int mode );
bbFrontBuffer, 'bbFrontBuffer',\                          ;BBCanvas bbFrontBuffer();
bbBackBuffer, 'bbBackBuffer',\                            ;BBCanvas bbBackBuffer();
bbEndGraphics, 'bbEndGraphics',\                          ;void bbEndGraphics();
bbGraphicsLost, 'bbGraphicsLost',\                        ;int bbGraphicsLost();
bbScanLine, 'bbScanLine',\                                ;int bbScanLine();
bbVWait, 'bbVWait',\                                      ;void bbVWait( int n );
bbFlip, 'bbFlip',\                                        ;void bbFlip( int vwait=1 );
bbSetBuffer, 'bbSetBuffer',\                              ;void bbSetBuffer( BBCanvas buff );
bbGraphicsBuffer, 'bbGraphicsBuffer',\                    ;BBCanvas bbGraphicsBuffer();
bbLoadBuffer, 'bbLoadBuffer',\                            ;int bbLoadBuffer( BBCanvas surf,const char *str );
bbSaveBuffer, 'bbSaveBuffer',\                            ;int bbSaveBuffer( BBCanvas surf,const char *str );
bbBufferDirty, 'bbBufferDirty',\                          ;void bbBufferDirty( BBCanvas buffer );
bbAutoBufferDirty, 'bbAutoBufferDirty',\                  ;void bbAutoBufferDirty( int enable );
bbLockBuffer, 'bbLockBuffer',\                            ;void bbLockBuffer( BBCanvas buff );
bbUnlockBuffer, 'bbUnlockBuffer',\                        ;void bbUnlockBuffer( BBCanvas buff );
bbReadPixel, 'bbReadPixel',\                              ;int bbReadPixel( int x,int y,BBCanvas buff );
bbWritePixel, 'bbWritePixel',\                            ;void bbWritePixel( int x,int y,int argb,BBCanvas buff );
bbReadPixelFast, 'bbReadPixelFast',\                      ;int bbReadPixelFast( int x,int y,BBCanvas buff );
bbWritePixelFast, 'bbWritePixelFast',\                    ;void bbWritePixelFast( int x,int y,int argb,BBCanvas buff );
bbCopyPixel, 'bbCopyPixel',\                              ;void bbCopyPixel( int src_x,int src_y,BBCanvas src,int dest_x,int dest_y,BBCanvas buff );
bbCopyPixelFast, 'bbCopyPixelFast',\                      ;void bbCopyPixelFast( int src_x,int src_y,BBCanvas src,int dest_x,int dest_y,BBCanvas buff );
bbOrigin, 'bbOrigin',\                                    ;void bbOrigin( int x,int y );
bbViewport, 'bbViewport',\                                ;void bbViewport( int x,int y,int w,int h );
bbColor, 'bbColor',\                                      ;void bbColor( int r,int g,int b );
bbClsColor, 'bbClsColor',\                                ;void bbClsColor( int r,int g,int b );
bbCls, 'bbCls',\                                          ;void bbCls();
bbPlot, 'bbPlot',\                                        ;void bbPlot( int x,int y );
bbLine, 'bbLine',\                                        ;void bbLine( int x1,int y1,int x2,int y2 );
bbRect, 'bbRect',\                                        ;void bbRect( int x,int y,int w,int h,int solid=1 );
bbOval, 'bbOval',\                                        ;void bbOval( int x,int y,int w,int h,int solid=1 );
bbText, 'bbText',\                                        ;void bbText( int x,int y,const char *t,int centre_x=0,int centre_y=0 );
bbCopyRect, 'bbCopyRect',\                                ;void bbCopyRect( int sx,int sy,int w,int h,int dx,int dy,BBCanvas src,BBCanvas dest );
bbGetColor, 'bbGetColor',\                                ;void bbGetColor( int x,int y );
bbColorRed, 'bbColorRed',\                                ;int bbColorRed();
bbColorGreen, 'bbColorGreen',\                            ;int bbColorGreen();
bbColorBlue, 'bbColorBlue',\                              ;int bbColorBlue();
bbLoadFont, 'bbLoadFont',\                                ;BBFont bbLoadFont( const char *name,int height,int bold,int italic,int underline );
bbFreeFont, 'bbFreeFont',\                                ;void bbFreeFont( BBFont f );
bbSetFont, 'bbSetFont',\                                  ;void bbSetFont( BBFont f );
bbFontWidth, 'bbFontWidth',\                              ;int bbFontWidth();
bbFontHeight, 'bbFontHeight',\                            ;int bbFontHeight();
bbStringWidth, 'bbStringWidth',\                          ;int bbStringWidth( const char *str );
bbStringHeight, 'bbStringHeight',\                        ;int bbStringHeight( const char *str );
bbLoadImage, 'bbLoadImage',\                              ;BBImage bbLoadImage( const char *s );
bbCopyImage, 'bbCopyImage',\                              ;BBImage bbCopyImage( BBImage sourceimage );
bbCreateImage, 'bbCreateImage',\                          ;BBImage bbCreateImage( int w,int h,int n );
bbLoadAnimImage, 'bbLoadAnimImage',\                      ;BBImage bbLoadAnimImage( const char *s,int w,int h,int first,int cnt );
bbFreeImage, 'bbFreeImage',\                              ;void bbFreeImage( BBImage i );
bbSaveImage, 'bbSaveImage',\                              ;int bbSaveImage( BBImage i,const char *filename,int frame );
bbGrabImage, 'bbGrabImage',\                              ;void bbGrabImage( BBImage i,int x,int y,int n );
bbImageBuffer, 'bbImageBuffer',\                          ;BBCanvas bbImageBuffer( BBImage i,int n );
bbDrawImage, 'bbDrawImage',\                              ;void bbDrawImage( BBImage i,int x,int y,int frame );
bbDrawBlock, 'bbDrawBlock',\                              ;void bbDrawBlock( BBImage i,int x,int y,int frame );
bbTileImage, 'bbTileImage',\                              ;void bbTileImage( BBImage i,int x,int y,int frame );
bbTileBlock, 'bbTileBlock',\                              ;void bbTileBlock( BBImage i,int x,int y,int frame );
bbDrawImageRect, 'bbDrawImageRect',\                      ;void bbDrawImageRect( BBImage i,int x,int y,int r_x,int r_y,int r_w,int r_h,int frame );
bbDrawBlockRect, 'bbDrawBlockRect',\                      ;void bbDrawBlockRect( BBImage i,int x,int y,int r_x,int r_y,int r_w,int r_h,int frame );
bbMaskImage, 'bbMaskImage',\                              ;void bbMaskImage( BBImage i,int r,int g,int b );
bbHandleImage, 'bbHandleImage',\                          ;void bbHandleImage( BBImage i,int x,int y );
bbScaleImage, 'bbScaleImage',\                            ;void bbScaleImage( BBImage i,float w,float h );
bbResizeImage, 'bbResizeImage',\                          ;void bbResizeImage( BBImage i,float w,float h );
bbRotateImage, 'bbRotateImage',\                          ;void bbRotateImage( BBImage i,float angle );
bbTFormImage, 'bbTFormImage',\                            ;void bbTFormImage( BBImage i,float a,float b,float c,float d );
bbTFormFilter, 'bbTFormFilter',\                          ;void bbTFormFilter( int enable );
bbAutoMidHandle, 'bbAutoMidHandle',\                      ;void bbAutoMidHandle( int enable );
bbMidHandle, 'bbMidHandle',\                              ;void bbMidHandle( BBImage i );
bbImageWidth, 'bbImageWidth',\                            ;int bbImageWidth( BBImage i );
bbImageHeight, 'bbImageHeight',\                          ;int bbImageHeight( BBImage i );
bbImageXHandle, 'bbImageXHandle',\                        ;int bbImageXHandle( BBImage i );
bbImageYHandle, 'bbImageYHandle',\                        ;int bbImageYHandle( BBImage i );
bbImagesOverlap, 'bbImagesOverlap',\                      ;int bbImagesOverlap( BBImage i1,int x1,int y1,BBImage i2,int x2,int y2 );
bbImagesCollide, 'bbImagesCollide',\                      ;int bbImagesCollide( BBImage i1,int x1,int y1,int f1,BBImage i2,int x2,int y2,int f2 );
bbRectsOverlap, 'bbRectsOverlap',\                        ;int bbRectsOverlap( int x1,int y1,int w1,int h1,int x2,int y2,int w2,int h2 );
bbImageRectOverlap, 'bbImageRectOverlap',\                ;int bbImageRectOverlap( BBImage i,int x,int y,int r_x,int r_y,int r_w,int r_h );
bbImageRectCollide, 'bbImageRectCollide',\                ;int bbImageRectCollide( BBImage i,int x,int y,int f,int r_x,int r_y,int r_w,int r_h );
bbWrite, 'bbWrite',\                                      ;void bbWrite( const char *str );
bbPrint, 'bbPrint',\                                      ;void bbPrint( const char *str );
bbInput, 'bbInput',\                                      ;const char *bbInput( const char *prompt );
bbLocate, 'bbLocate',\                                    ;void bbLocate( int x,int y );
bbOpenMovie, 'bbOpenMovie',\                              ;BBMovie bbOpenMovie( const char *s );
bbDrawMovie, 'bbDrawMovie',\                              ;int bbDrawMovie( BBMovie movie,int x,int y,int w,int h );
bbMovieWidth, 'bbMovieWidth',\                            ;int bbMovieWidth( BBMovie movie );
bbMovieHeight, 'bbMovieHeight',\                          ;int bbMovieHeight( BBMovie movie );
bbMoviePlaying, 'bbMoviePlaying',\                        ;int bbMoviePlaying( BBMovie movie );
bbCloseMovie, 'bbCloseMovie',\                            ;void bbCloseMovie( BBMovie movie );
bbSetGamma, 'bbSetGamma',\                                ;void bbSetGamma( int r,int g,int b,float dr,float dg,float db );
bbUpdateGamma, 'bbUpdateGamma',\                          ;void bbUpdateGamma( int calibrate );
bbGammaRed, 'bbGammaRed',\                                ;float bbGammaRed( int n );
bbGammaGreen, 'bbGammaGreen',\                            ;float bbGammaGreen( int n );
bbGammaBlue, 'bbGammaBlue',\                              ;float bbGammaBlue( int n );
\  ; bbgraphics3d
bbLoaderMatrix, 'bbLoaderMatrix',\                        ;void bbLoaderMatrix( const char *ext,float xx,float xy,float xz,float yx,float yy,float yz,float zx,float zy,float zz );
bbHWTexUnits, 'bbHWTexUnits',\                            ;int bbHWTexUnits();
bbHWMultiTex, 'bbHWMultiTex',\                            ;void bbHWMultiTex( int enable );
bbWBuffer, 'bbWBuffer',\                                  ;void bbWBuffer( int enable );
bbDither, 'bbDither',\                                    ;void bbDither( int enable );
bbAntiAlias, 'bbAntiAlias',\                              ;void bbAntiAlias( int enable );
bbWireFrame, 'bbWireFrame',\                              ;void bbWireFrame( int enable );
bbAmbientLight, 'bbAmbientLight',\                        ;void bbAmbientLight( float r,float g,float b );
bbClearCollisions, 'bbClearCollisions',\                  ;void bbClearCollisions();
bbCollisions, 'bbCollisions',\                            ;void bbCollisions( int src_type,int dest_type,int method,int response );
bbUpdateWorld, 'bbUpdateWorld',\                          ;void bbUpdateWorld( float elapsed=1.0 );
bbRenderWorld, 'bbRenderWorld',\                          ;void bbRenderWorld( float tween=1.0 );
bbCaptureWorld, 'bbCaptureWorld',\                        ;void bbCaptureWorld();
bbTrisRendered, 'bbTrisRendered',\                        ;int bbTrisRendered();
bbStats3D, 'bbStats3D',\                                  ;float bbStats3D( int n );
bbLoadTexture, 'bbLoadTexture',\                          ;BBTexture bbLoadTexture( const char *file,int flags=1 );
bbCreateTexture, 'bbCreateTexture',\                      ;BBTexture bbCreateTexture( int w,int h,int flags=0,int frames=1 );
bbLoadAnimTexture, 'bbLoadAnimTexture',\                  ;BBTexture bbLoadAnimTexture( const char *file,int flags,int w,int h,int first,int cnt );
bbFreeTexture, 'bbFreeTexture',\                          ;void bbFreeTexture( BBTexture t );
bbTextureBlend, 'bbTextureBlend',\                        ;void bbTextureBlend( BBTexture t,int blend );
bbTextureCoords, 'bbTextureCoords',\                      ;void bbTextureCoords( BBTexture t,int flags );
bbScaleTexture, 'bbScaleTexture',\                        ;void bbScaleTexture( BBTexture t,float u_scale,float v_scale );
bbRotateTexture, 'bbRotateTexture',\                      ;void bbRotateTexture( BBTexture t,float angle );
bbPositionTexture, 'bbPositionTexture',\                  ;void bbPositionTexture( BBTexture t,float u_pos,float v_pos );
bbTextureWidth, 'bbTextureWidth',\                        ;int bbTextureWidth( BBTexture t );
bbTextureHeight, 'bbTextureHeight',\                      ;int bbTextureHeight( BBTexture t );
bbTextureName, 'bbTextureName',\                          ;const char *bbTextureName( BBTexture t );
bbSetCubeFace, 'bbSetCubeFace',\                          ;void bbSetCubeFace( BBTexture t,int face );
bbSetCubeMode, 'bbSetCubeMode',\                          ;void bbSetCubeMode( BBTexture t,int mode );
bbTextureBuffer, 'bbTextureBuffer',\                      ;BBCanvas bbTextureBuffer( BBTexture t,int frame=0 );
bbClearTextureFilters, 'bbClearTextureFilters',\          ;void bbClearTextureFilters();
bbTextureFilter, 'bbTextureFilter',\                      ;void bbTextureFilter( const char *t,int flags );
bbCreateBrush, 'bbCreateBrush',\                          ;BBBrush bbCreateBrush( float r=255.0f,float g=255.0f,float b=255.0f );
bbLoadBrush, 'bbLoadBrush',\                              ;BBBrush bbLoadBrush( const char *file,int texture_flags=1,float u_scale=1.0,float v_scale=1.0 );
bbFreeBrush, 'bbFreeBrush',\                              ;void bbFreeBrush( BBBrush b );
bbBrushColor, 'bbBrushColor',\                            ;void bbBrushColor( BBBrush br,float r,float g,float b );
bbBrushAlpha, 'bbBrushAlpha',\                            ;void bbBrushAlpha( BBBrush b,float alpha );
bbBrushShininess, 'bbBrushShininess',\                    ;void bbBrushShininess( BBBrush b,float n );
bbBrushTexture, 'bbBrushTexture',\                        ;void bbBrushTexture( BBBrush b,BBTexture t,int frame,int index );
bbGetBrushTexture, 'bbGetBrushTexture',\                  ;BBTexture bbGetBrushTexture( BBBrush b,int index );
bbBrushBlend, 'bbBrushBlend',\                            ;void bbBrushBlend( BBBrush b,int blend );
bbBrushFX, 'bbBrushFX',\                                  ;void bbBrushFX( BBBrush b,int fx );
bbCreateMesh, 'bbCreateMesh',\                            ;BBModel bbCreateMesh( BBEntity p=0 );
bbLoadMesh, 'bbLoadMesh',\                                ;BBModel bbLoadMesh( const char *f,BBEntity p=0 );
bbLoadAnimMesh, 'bbLoadAnimMesh',\                        ;BBModel bbLoadAnimMesh( const char *f,BBEntity p=0 );
bbCreateCube, 'bbCreateCube',\                            ;BBModel bbCreateCube( BBEntity p=0 );
bbCreateSphere, 'bbCreateSphere',\                        ;BBModel bbCreateSphere( int segs=8,BBEntity p=0 );
bbCreateCylinder, 'bbCreateCylinder',\                    ;BBModel bbCreateCylinder( int segs=8,int solid=1,BBEntity p=0 );
bbCreateCone, 'bbCreateCone',\                            ;BBModel bbCreateCone( int segs=8,int solid=1,BBEntity p=0 );
bbCopyMesh, 'bbCopyMesh',\                                ;BBModel bbCopyMesh( BBModel m,BBEntity p=0 );
bbScaleMesh, 'bbScaleMesh',\                              ;void bbScaleMesh( BBModel m,float x,float y,float z );
bbRotateMesh, 'bbRotateMesh',\                            ;void bbRotateMesh( BBModel m,float x,float y,float z );
bbPositionMesh, 'bbPositionMesh',\                        ;void bbPositionMesh( BBModel m,float x,float y,float z );
bbFitMesh, 'bbFitMesh',\                                  ;void bbFitMesh( BBModel m,float x,float y,float z,float w,float h,float d,int uniform=0 );
bbFlipMesh, 'bbFlipMesh',\                                ;void bbFlipMesh( BBModel m );
bbPaintMesh, 'bbPaintMesh',\                              ;void bbPaintMesh( BBModel m,BBBrush b );
bbAddMesh, 'bbAddMesh',\                                  ;void bbAddMesh( BBModel src,BBModel dest );
bbUpdateNormals, 'bbUpdateNormals',\                      ;void bbUpdateNormals( BBModel m );
bbLightMesh, 'bbLightMesh',\                              ;void bbLightMesh( BBModel m,float r,float g,float b,float range,float x,float y,float z );
bbMeshWidth, 'bbMeshWidth',\                              ;float bbMeshWidth( BBModel m );
bbMeshHeight, 'bbMeshHeight',\                            ;float bbMeshHeight( BBModel m );
bbMeshDepth, 'bbMeshDepth',\                              ;float bbMeshDepth( BBModel m );
bbMeshesIntersect, 'bbMeshesIntersect',\                  ;int bbMeshesIntersect( BBModel a,BBModel b );
bbCountSurfaces, 'bbCountSurfaces',\                      ;int bbCountSurfaces( BBModel m );
bbGetSurface, 'bbGetSurface',\                            ;BBSurface bbGetSurface( BBModel m,int index );
bbMeshCullBox, 'bbMeshCullBox',\                          ;void bbMeshCullBox( BBModel m,float x,float y,float z,float w,float h,float d );
bbCreateSurface, 'bbCreateSurface',\                      ;BBSurface bbCreateSurface( BBModel m,BBBrush b=0 );
bbFindSurface, 'bbFindSurface',\                          ;BBSurface bbFindSurface( BBModel m,BBBrush b );
bbGetSurfaceBrush, 'bbGetSurfaceBrush',\                  ;BBBrush bbGetSurfaceBrush( BBSurface s );
bbGetEntityBrush, 'bbGetEntityBrush',\                    ;BBBrush bbGetEntityBrush( BBModel m );
bbClearSurface, 'bbClearSurface',\                        ;void bbClearSurface( BBSurface s,int verts,int tris );
bbPaintSurface, 'bbPaintSurface',\                        ;void bbPaintSurface( BBSurface s,BBBrush b );
bbAddVertex, 'bbAddVertex',\                              ;int bbAddVertex( BBSurface s,float x,float y,float z,float tu=0.0f,float tv=0.0f,float tw=0.0f );
bbAddTriangle, 'bbAddTriangle',\                          ;int bbAddTriangle( BBSurface s,int v0,int v1,int v2 );
bbVertexCoords, 'bbVertexCoords',\                        ;void bbVertexCoords( BBSurface s,int n,float x,float y,float z );
bbVertexNormal, 'bbVertexNormal',\                        ;void bbVertexNormal( BBSurface s,int n,float x,float y,float z );
bbVertexColor, 'bbVertexColor',\                          ;void bbVertexColor( BBSurface s,int n,float r,float g,float b,float a );
bbVertexTexCoords, 'bbVertexTexCoords',\                  ;void bbVertexTexCoords( BBSurface s,int n,float u,float v,float w,int set );
bbCountVertices, 'bbCountVertices',\                      ;int bbCountVertices( BBSurface s );
bbCountTriangles, 'bbCountTriangles',\                    ;int bbCountTriangles( BBSurface s );
bbVertexX, 'bbVertexX',\                                  ;float bbVertexX( BBSurface s,int n );
bbVertexY, 'bbVertexY',\                                  ;float bbVertexY( BBSurface s,int n );
bbVertexZ, 'bbVertexZ',\                                  ;float bbVertexZ( BBSurface s,int n );
bbVertexNX, 'bbVertexNX',\                                ;float bbVertexNX( BBSurface s,int n );
bbVertexNY, 'bbVertexNY',\                                ;float bbVertexNY( BBSurface s,int n );
bbVertexNZ, 'bbVertexNZ',\                                ;float bbVertexNZ( BBSurface s,int n );
bbVertexRed, 'bbVertexRed',\                              ;float bbVertexRed( BBSurface s,int n );
bbVertexGreen, 'bbVertexGreen',\                          ;float bbVertexGreen( BBSurface s,int n );
bbVertexBlue, 'bbVertexBlue',\                            ;float bbVertexBlue( BBSurface s,int n );
bbVertexAlpha, 'bbVertexAlpha',\                          ;float bbVertexAlpha( BBSurface s,int n );
bbVertexU, 'bbVertexU',\                                  ;float bbVertexU( BBSurface s,int n,int t );
bbVertexV, 'bbVertexV',\                                  ;float bbVertexV( BBSurface s,int n,int t );
bbVertexW, 'bbVertexW',\                                  ;float bbVertexW( BBSurface s,int n,int t );
bbTriangleVertex, 'bbTriangleVertex',\                    ;int bbTriangleVertex( BBSurface s,int n,int v );
bbCreateCamera, 'bbCreateCamera',\                        ;BBCamera bbCreateCamera( BBEntity p=0 );
bbCameraZoom, 'bbCameraZoom',\                            ;void bbCameraZoom( BBCamera c,float zoom );
bbCameraRange, 'bbCameraRange',\                          ;void bbCameraRange( BBCamera c,float nr,float fr );
bbCameraClsColor, 'bbCameraClsColor',\                    ;void bbCameraClsColor( BBCamera c,float r,float g,float b );
bbCameraClsMode, 'bbCameraClsMode',\                      ;void bbCameraClsMode( BBCamera c,int cls_color,int cls_zbuffer );
bbCameraProjMode, 'bbCameraProjMode',\                    ;void bbCameraProjMode( BBCamera c,int mode );
bbCameraViewport, 'bbCameraViewport',\                    ;void bbCameraViewport( BBCamera c,int x,int y,int w,int h );
bbCameraFogRange, 'bbCameraFogRange',\                    ;void bbCameraFogRange( BBCamera c,float nr,float fr );
bbCameraFogColor, 'bbCameraFogColor',\                    ;void bbCameraFogColor( BBCamera c,float r,float g,float b );
bbCameraFogMode, 'bbCameraFogMode',\                      ;void bbCameraFogMode( BBCamera c,int mode );
bbCameraProject, 'bbCameraProject',\                      ;int bbCameraProject( BBCamera c,float x,float y,float z );
bbProjectedX, 'bbProjectedX',\                            ;float bbProjectedX();
bbProjectedY, 'bbProjectedY',\                            ;float bbProjectedY();
bbProjectedZ, 'bbProjectedZ',\                            ;float bbProjectedZ();
bbCameraPick, 'bbCameraPick',\                            ;BBEntity bbCameraPick( BBCamera c,float x,float y );
bbLinePick, 'bbLinePick',\                                ;BBEntity bbLinePick( float x,float y,float z,float dx,float dy,float dz,float radius );
bbEntityPick, 'bbEntityPick',\                            ;BBEntity bbEntityPick( BBObject src,float range );
bbEntityVisible, 'bbEntityVisible',\                      ;int bbEntityVisible( BBObject src,BBObject dest );
bbEntityInView, 'bbEntityInView',\                        ;int bbEntityInView( BBEntity e,BBCamera c );
bbPickedX, 'bbPickedX',\                                  ;float bbPickedX();
bbPickedY, 'bbPickedY',\                                  ;float bbPickedY();
bbPickedZ, 'bbPickedZ',\                                  ;float bbPickedZ();
bbPickedNX, 'bbPickedNX',\                                ;float bbPickedNX();
bbPickedNY, 'bbPickedNY',\                                ;float bbPickedNY();
bbPickedNZ, 'bbPickedNZ',\                                ;float bbPickedNZ();
bbPickedTime, 'bbPickedTime',\                            ;float bbPickedTime();
bbPickedEntity, 'bbPickedEntity',\                        ;BBObject bbPickedEntity();
bbPickedSurface, 'bbPickedSurface',\                      ;BBSurface bbPickedSurface();
bbPickedTriangle, 'bbPickedTriangle',\                    ;int bbPickedTriangle();
bbCreateLight, 'bbCreateLight',\                          ;BBLight bbCreateLight( int type=0,BBEntity p=0 );
bbLightColor, 'bbLightColor',\                            ;void bbLightColor( BBLight light,float r,float g,float b );
bbLightRange, 'bbLightRange',\                            ;void bbLightRange( BBLight light,float range );
bbLightConeAngles, 'bbLightConeAngles',\                  ;void bbLightConeAngles( BBLight light,float inner,float outer );
bbCreatePivot, 'bbCreatePivot',\                          ;BBPivot bbCreatePivot( BBEntity p=0 );
bbCreateSprite, 'bbCreateSprite',\                        ;BBSprite bbCreateSprite( BBEntity p=0 );
bbLoadSprite, 'bbLoadSprite',\                            ;BBSprite bbLoadSprite( const char *file,int texture_flags=1,BBEntity p=0 );
bbRotateSprite, 'bbRotateSprite',\                        ;void bbRotateSprite( BBSprite s,float angle );
bbScaleSprite, 'bbScaleSprite',\                          ;void bbScaleSprite( BBSprite s,float x,float y );
bbHandleSprite, 'bbHandleSprite',\                        ;void bbHandleSprite( BBSprite s,float x,float y );
bbSpriteViewMode, 'bbSpriteViewMode',\                    ;void bbSpriteViewMode( BBSprite s,int mode );
bbCreateMirror, 'bbCreateMirror',\                        ;BBMirror bbCreateMirror( BBEntity p=0 );
bbCreatePlane, 'bbCreatePlane',\                          ;BBPlaneModel bbCreatePlane( int segs=1,BBEntity p=0 );
bbLoadMD2, 'bbLoadMD2',\                                  ;BBMD2Model bbLoadMD2( const char *file,BBEntity p=0 );
bbAnimateMD2, 'bbAnimateMD2',\                            ;void bbAnimateMD2( BBMD2Model m,int mode=1,float speed=1.0,int first=0,int last=9999,float trans=0.0 );
bbMD2AnimTime, 'bbMD2AnimTime',\                          ;float bbMD2AnimTime( BBMD2Model m );
bbMD2AnimLength, 'bbMD2AnimLength',\                      ;int bbMD2AnimLength( BBMD2Model m );
bbMD2Animating, 'bbMD2Animating',\                        ;int bbMD2Animating( BBMD2Model m );
bbLoadBSP, 'bbLoadBSP',\                                  ;BBQ3BSPModel bbLoadBSP( const char *file,float gam,BBEntity p=0 );
bbBSPAmbientLight, 'bbBSPAmbientLight',\                  ;void bbBSPAmbientLight( BBQ3BSPModel t,float r,float g,float b );
bbBSPLighting, 'bbBSPLighting',\                          ;void bbBSPLighting( BBQ3BSPModel t,int lmap );
bbCreateTerrain, 'bbCreateTerrain',\                      ;BBTerrain bbCreateTerrain( int n,BBEntity p=0 );
bbLoadTerrain, 'bbLoadTerrain',\                          ;BBTerrain bbLoadTerrain( const char *file,BBEntity p=0 );
bbTerrainDetail, 'bbTerrainDetail',\                      ;void bbTerrainDetail( BBTerrain t,int n,int m );
bbTerrainShading, 'bbTerrainShading',\                    ;void bbTerrainShading( BBTerrain t,int enable );
bbTerrainX, 'bbTerrainX',\                                ;float bbTerrainX( BBTerrain t,float x,float y,float z );
bbTerrainY, 'bbTerrainY',\                                ;float bbTerrainY( BBTerrain t,float x,float y,float z );
bbTerrainZ, 'bbTerrainZ',\                                ;float bbTerrainZ( BBTerrain t,float x,float y,float z );
bbTerrainSize, 'bbTerrainSize',\                          ;int bbTerrainSize( BBTerrain t );
bbTerrainHeight, 'bbTerrainHeight',\                      ;float bbTerrainHeight( BBTerrain t,int x,int z );
bbModifyTerrain, 'bbModifyTerrain',\                      ;void bbModifyTerrain( BBTerrain t,int x,int z,float h,int realtime );
bbCreateListener, 'bbCreateListener',\                    ;BBEntity bbCreateListener( BBEntity p=0,float roll=1.0,float dopp=1.0,float dist=1.0 );
bbEmitSound, 'bbEmitSound',\                              ;BBChannel bbEmitSound( BBSound sound,BBObject o );
bbCopyEntity, 'bbCopyEntity',\                            ;BBEntity bbCopyEntity( BBEntity e,BBEntity p=0 );
bbFreeEntity, 'bbFreeEntity',\                            ;void bbFreeEntity( BBEntity e );
bbHideEntity, 'bbHideEntity',\                            ;void bbHideEntity( BBEntity e );
bbShowEntity, 'bbShowEntity',\                            ;void bbShowEntity( BBEntity e );
bbEntityParent, 'bbEntityParent',\                        ;void bbEntityParent( BBEntity e,BBEntity p=0,int global=1 );
bbCountChildren, 'bbCountChildren',\                      ;int bbCountChildren( BBEntity e );
bbGetChild, 'bbGetChild',\                                ;BBEntity bbGetChild( BBEntity e,int index );
bbFindChild, 'bbFindChild',\                              ;BBEntity bbFindChild( BBEntity e,const char *t );
bbLoadAnimSeq, 'bbLoadAnimSeq',\                          ;int bbLoadAnimSeq( BBObject o,const char *f );
bbSetAnimTime, 'bbSetAnimTime',\                          ;void bbSetAnimTime( BBObject o,float time,int seq );
bbAnimate, 'bbAnimate',\                                  ;void bbAnimate( BBObject o,int mode=1,float speed=1.0f,int seq=0,float trans=0.0f );
bbSetAnimKey, 'bbSetAnimKey',\                            ;void bbSetAnimKey( BBObject o,int frame,int pos_key=1,int rot_key=1,int scl_key=1 );
bbExtractAnimSeq, 'bbExtractAnimSeq',\                    ;int bbExtractAnimSeq( BBObject o,int first,int last,int seq );
bbAddAnimSeq, 'bbAddAnimSeq',\                            ;int bbAddAnimSeq( BBObject o,int length );
bbAnimSeq, 'bbAnimSeq',\                                  ;int bbAnimSeq( BBObject o );
bbAnimTime, 'bbAnimTime',\                                ;float bbAnimTime( BBObject o );
bbAnimLength, 'bbAnimLength',\                            ;int bbAnimLength( BBObject o );
bbAnimating, 'bbAnimating',\                              ;int bbAnimating( BBObject o );
bbPaintEntity, 'bbPaintEntity',\                          ;void bbPaintEntity( BBEntity e,BBBrush b );
bbEntityColor, 'bbEntityColor',\                          ;void bbEntityColor( BBModel m,float r,float g,float b );
bbEntityAlpha, 'bbEntityAlpha',\                          ;void bbEntityAlpha( BBModel m,float alpha );
bbEntityShininess, 'bbEntityShininess',\                  ;void bbEntityShininess( BBModel m,float shininess );
bbEntityTexture, 'bbEntityTexture',\                      ;void bbEntityTexture( BBModel m,BBTexture t,int frame=0,int index=0 );
bbEntityBlend, 'bbEntityBlend',\                          ;void bbEntityBlend( BBModel m,int blend );
bbEntityFX, 'bbEntityFX',\                                ;void bbEntityFX( BBModel m,int fx );
bbEntityAutoFade, 'bbEntityAutoFade',\                    ;void bbEntityAutoFade( BBModel m,float nr,float fr );
bbEntityOrder, 'bbEntityOrder',\                          ;void bbEntityOrder( BBObject o,int n );
bbEntityX, 'bbEntityX',\                                  ;float bbEntityX( BBEntity e,int global=0 );
bbEntityY, 'bbEntityY',\                                  ;float bbEntityY( BBEntity e,int global=0 );
bbEntityZ, 'bbEntityZ',\                                  ;float bbEntityZ( BBEntity e,int global=0 );
bbEntityPitch, 'bbEntityPitch',\                          ;float bbEntityPitch( BBEntity e,int global=0 );
bbEntityYaw, 'bbEntityYaw',\                              ;float bbEntityYaw( BBEntity e,int global=0 );
bbEntityRoll, 'bbEntityRoll',\                            ;float bbEntityRoll( BBEntity e,int global=0 );
bbGetMatElement, 'bbGetMatElement',\                      ;float bbGetMatElement( BBEntity e,int row,int col );
bbTFormPoint, 'bbTFormPoint',\                            ;void bbTFormPoint( float x,float y,float z,BBEntity src,BBEntity dest );
bbTFormVector, 'bbTFormVector',\                          ;void bbTFormVector( float x,float y,float z,BBEntity src,BBEntity dest );
bbTFormNormal, 'bbTFormNormal',\                          ;void bbTFormNormal( float x,float y,float z,BBEntity src,BBEntity dest );
bbTFormedX, 'bbTFormedX',\                                ;float bbTFormedX();
bbTFormedY, 'bbTFormedY',\                                ;float bbTFormedY();
bbTFormedZ, 'bbTFormedZ',\                                ;float bbTFormedZ();
bbVectorYaw, 'bbVectorYaw',\                              ;float bbVectorYaw( float x,float y,float z );
bbVectorPitch, 'bbVectorPitch',\                          ;float bbVectorPitch( float x,float y,float z );
bbDeltaYaw, 'bbDeltaYaw',\                                ;float bbDeltaYaw( BBEntity src,BBEntity dest );
bbDeltaPitch, 'bbDeltaPitch',\                            ;float bbDeltaPitch( BBEntity src,BBEntity dest );
bbEntityType, 'bbEntityType',\                            ;void bbEntityType( BBObject o,int type,int recurs=0 );
bbEntityPickMode, 'bbEntityPickMode',\                    ;void bbEntityPickMode( BBObject o,int mode,int obs );
bbGetParent, 'bbGetParent',\                              ;BBEntity bbGetParent( BBEntity e );
bbGetEntityType, 'bbGetEntityType',\                      ;int bbGetEntityType( BBObject o );
bbEntityRadius, 'bbEntityRadius',\                        ;void bbEntityRadius( BBObject o,float x_radius,float y_radius=0.0 );
bbEntityBox, 'bbEntityBox',\                              ;void bbEntityBox( BBObject o,float x,float y,float z,float w,float h,float d );
bbEntityCollided, 'bbEntityCollided',\                    ;BBObject bbEntityCollided( BBObject o,int type );
bbCountCollisions, 'bbCountCollisions',\                  ;int bbCountCollisions( BBObject o );
bbCollisionX, 'bbCollisionX',\                            ;float bbCollisionX( BBObject o,int index );
bbCollisionY, 'bbCollisionY',\                            ;float bbCollisionY( BBObject o,int index );
bbCollisionZ, 'bbCollisionZ',\                            ;float bbCollisionZ( BBObject o,int index );
bbCollisionNX, 'bbCollisionNX',\                          ;float bbCollisionNX( BBObject o,int index );
bbCollisionNY, 'bbCollisionNY',\                          ;float bbCollisionNY( BBObject o,int index );
bbCollisionNZ, 'bbCollisionNZ',\                          ;float bbCollisionNZ( BBObject o,int index );
bbCollisionTime, 'bbCollisionTime',\                      ;float bbCollisionTime( BBObject o,int index );
bbCollisionEntity, 'bbCollisionEntity',\                  ;BBObject bbCollisionEntity( BBObject o,int index );
bbCollisionSurface, 'bbCollisionSurface',\                ;BBSurface bbCollisionSurface( BBObject o,int index );
bbCollisionTriangle, 'bbCollisionTriangle',\              ;int bbCollisionTriangle( BBObject o,int index );
bbEntityDistance, 'bbEntityDistance',\                    ;float bbEntityDistance( BBEntity src,BBEntity dest );
bbMoveEntity, 'bbMoveEntity',\                            ;void bbMoveEntity( BBEntity e,float x,float y,float z );
bbTurnEntity, 'bbTurnEntity',\                            ;void bbTurnEntity( BBEntity e,float p,float y,float r,int global=0 );
bbTranslateEntity, 'bbTranslateEntity',\                  ;void bbTranslateEntity( BBEntity e,float x,float y,float z,int global=0 );
bbPositionEntity, 'bbPositionEntity',\                    ;void bbPositionEntity( BBEntity e,float x,float y,float z,int global=0 );
bbScaleEntity, 'bbScaleEntity',\                          ;void bbScaleEntity( BBEntity e,float x,float y,float z,int global=0 );
bbRotateEntity, 'bbRotateEntity',\                        ;void bbRotateEntity( BBEntity e,float p,float y,float r,int global=0 );
bbPointEntity, 'bbPointEntity',\                          ;void bbPointEntity( BBEntity e,BBEntity t,float roll=0 );
bbAlignToVector, 'bbAlignToVector',\                      ;void bbAlignToVector( BBEntity e,float nx,float ny,float nz,int axis,float rate );
bbNameEntity, 'bbNameEntity',\                            ;void bbNameEntity( BBEntity e,const char *t );
bbEntityName, 'bbEntityName',\                            ;const char *bbEntityName( BBEntity e );
bbEntityClass, 'bbEntityClass',\                          ;const char *bbEntityClass( BBEntity e );
bbClearWorld, 'bbClearWorld',\                            ;void bbClearWorld( int e,int b,int t );
bbSetEntityID, 'bbSetEntityID',\                          ;void bbSetEntityID( BBEntity *e,int id );
bbEntityID, 'bbEntityID',\                                ;int bbEntityID( BBEntity *e );
bbActiveTextures, 'bbActiveTextures'                      ;int bbActiveTextures();

